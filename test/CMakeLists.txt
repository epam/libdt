project(tests)
find_package(GTest)
if(GTEST_FOUND)
    message(STATUS "Google tests found, unit tests are available")
    enable_testing()

    if(CMAKE_COMPILER_IS_GNUCXX)
        set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake")
        message(STATUS "Cmake module path is: ${CMAKE_MODULE_PATH}")
        include(CodeCoverage)
        if(CODE_COVERAGE_FOUND)
            message(STATUS "Code coverage report tools was found so coverage report is available with targer 'coverage'")
            setup_target_for_coverage(coverage ${PROJECT_NAME} coverage)
        else()
            message(WARNING "Coverage report tools was not found so we can't generate code coverage report")
        endif()
    else()
        message(WARNING "Compiler intendification is not GNU so we cant produce coverage report")
    endif()
    include_directories(${GTEST_INCLUDE_DIRS})
    find_package( Threads )
    aux_source_directory(. SRC_LIST)
    add_executable(${PROJECT_NAME} ${SRC_LIST})
    target_link_libraries(${PROJECT_NAME} ${GTEST_BOTH_LIBRARIES} ${CMAKE_THREAD_LIBS_INIT} tz)
    add_test(all-tests ${PROJECT_NAME})
else()
message(WARNING "No google tests found so unit tests are not available")
endif()

