aux_source_directory(. SRC_LIST)
set( CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS} " -Wall" )

if(CMAKE_COMPILER_IS_GNUCXX)
    if(CMAKE_BUILD_TYPE MATCHES "Debug")
        set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake")
        message(STATUS "Cmake module path is: ${CMAKE_MODULE_PATH}")
        include(CodeCoverage)
        if(CODE_COVERAGE_FOUND)
            message(STATUS "Code coverage report tools was found so coverage report is available with target 'coverage'")
            setup_target_for_coverage(coverage tests coverage)
        else(CODE_COVERAGE_FOUND)
            message(WARNING "Coverage report tools was not found so we can't generate code coverage report")
        endif(CODE_COVERAGE_FOUND)
    else(CMAKE_BUILD_TYPE MATCHES "Debug")
        message(WARNING "Build type is no 'Debug', so coverage repor will be unavailable")
    endif(CMAKE_BUILD_TYPE MATCHES "Debug")
else(CMAKE_COMPILER_IS_GNUCXX)
    message(WARNING "Compiler intendification is not GNU so we cant produce coverage report")
endif(CMAKE_COMPILER_IS_GNUCXX)

if(UNIX)
if(NOT CYGWIN)
    if(NOT SYSTEM_TZ_DIR)
        execute_process(COMMAND uname -s OUTPUT_VARIABLE SYSTEM_DISTR_NAME)
        if(${SYSTEM_DISTR_NAME} MATCHES "Linux")
            set(SYSTEM_TZ_DIR "/usr/share/zoneinfo")
        else()
            set(SYSTEM_TZ_DIR "/usr/share/lib/zoneinfo")
        endif()
    endif(NOT SYSTEM_TZ_DIR)
    message(SYSTEM_TZ_DIR=${SYSTEM_TZ_DIR})
    add_definitions(-DTZDIR="${SYSTEM_TZ_DIR}")

    file(GLOB SRC_LIST ${SRC_LIST} "unix/*.c")
    file(GLOB SRC_LIST ${SRC_LIST} "unix/libtz/*.c")
    include_directories(. unix)
endif(NOT CYGWIN)
endif(UNIX)

if(WIN32)
    include_directories(. win32)
    file(GLOB SRC_LIST ${SRC_LIST} "*win32/*.c")
    file(GLOB SRC_LIST ${SRC_LIST} "*win32/gnutimeutils/*.c")
endif(WIN32)

add_library(${PROJECT_NAME} ${SRC_LIST} )
add_dependencies(${PROJECT_NAME} timezones-map format-source)

if(UNIX)
if(NOT CYGWIN)
    target_link_libraries(${PROJECT_NAME} rt m)
endif(NOT CYGWIN)
endif(UNIX)

include(../cmake/TZPack.cmake)

add_subdirectory(unix/libtz)
